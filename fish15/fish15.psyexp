<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'psychopyOutput/%s_%s' % (expInfo['participant'], expName)" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'experimenter': '', 'language': 'english'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="html" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="packaged" valType="str" updates="None" name="JS libs"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="" valType="str" updates="None" name="OSF Project ID"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="use prefs" valType="str" updates="None" name="Units"/>
    <Param val="2023.1.3" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1200]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="white" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="Fish15" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="runTrial">
      <RoutineSettingsComponent name="runTrial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="runTrial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="myFaceFileName=&quot;temp&quot;&amp;#10;myLeftFishFileName=&quot;temp&quot;&amp;#10;myRightFishFileName=&quot;temp&quot;&amp;#10;showLeftFish=&quot;temp&quot;&amp;#10;showRightFish=&quot;temp&quot;&amp;#10;myFeedbackImpage=&quot;temp&quot;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="myFaceFileName = &quot;temp&quot;;&amp;#10;myLeftFishFileName = &quot;temp&quot;;&amp;#10;myRightFishFileName = &quot;temp&quot;;&amp;#10;showLeftFish = &quot;temp&quot;;&amp;#10;showRightFish = &quot;temp&quot;;&amp;#10;myFeedbackImpage = &quot;temp&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="myFaceFileName = ((&quot;assets/&quot; + face) + &quot;.png&quot;);&amp;#10;myLeftFishFileName = ((&quot;assets/&quot; + leftFish) + &quot;.png&quot;);&amp;#10;myRightFishFileName = ((&quot;assets/&quot; + rightFish) + &quot;.png&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="myFaceFileName= &quot;assets/&quot;+face+&quot;.png&quot;&amp;#10;myLeftFishFileName=&quot;assets/&quot;+leftFish+&quot;.png&quot;&amp;#10;myRightFishFileName=&quot;assets/&quot;+rightFish+&quot;.png&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="trial_face" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myFaceFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="trial_face" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="trial_text" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="trial_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;trial_text&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="fishOnLeft" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myLeftFishFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="fishOnLeft" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.15, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val=".25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="fishOnRight" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myRightFishFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="fishOnRight" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(+0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="trial_response" plugin="None">
        <Param val="'z','m','left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="trial_response" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="nFBleft = 0;&amp;#10;nFBright = 0;&amp;#10;if ((trial_response.keys === &quot;z&quot;)) {&amp;#10;    trial_response.keys = &quot;left&quot;;&amp;#10;}&amp;#10;if ((trial_response.keys === &quot;m&quot;)) {&amp;#10;    trial_response.keys = &quot;right&quot;;&amp;#10;}&amp;#10;if ((trial_response.keys === &quot;left&quot;)) {&amp;#10;    myChosen = &quot;left&quot;;&amp;#10;    myCircleHoriz = (- 0.13);&amp;#10;} else {&amp;#10;    myChosen = &quot;right&quot;;&amp;#10;    myCircleHoriz = 0.22;&amp;#10;}&amp;#10;if ((trial_response.keys === correctResponse)) {&amp;#10;    myTrialCorrect = true;&amp;#10;    psychoJS.experiment.addData(&quot;Correct&quot;, 1);&amp;#10;    myTally = (myTally + 1);&amp;#10;    myFeedbackImage = &quot;assets/win.png&quot;;&amp;#10;    myConsecutiveCorrect = (myConsecutiveCorrect + 1);&amp;#10;    if ((myConsecutiveCorrect &gt;= myCriterion)) {&amp;#10;        CriterionReached = true;&amp;#10;    }&amp;#10;} else {&amp;#10;    myTrialCorrect = false;&amp;#10;    psychoJS.experiment.addData(&quot;Correct&quot;, 0);&amp;#10;    myFeedbackImage = &quot;assets/lose.png&quot;;&amp;#10;    myConsecutiveCorrect = 0;&amp;#10;}&amp;#10;if ((correctResponse === &quot;left&quot;)) {&amp;#10;    showLeftFish = myLeftFishFileName;&amp;#10;    showRightFish = &quot;assets/blank.png&quot;;&amp;#10;} else {&amp;#10;    showLeftFish = &quot;assets/blank.png&quot;;&amp;#10;    showRightFish = myRightFishFileName;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="nFBleft=0&amp;#10;nFBright=0&amp;#10;&amp;#10;if(trial_response.keys == &quot;z&quot;):&amp;#10;    trial_response.keys = &quot;left&quot;&amp;#10;if(trial_response.keys == &quot;m&quot;):&amp;#10;    trial_response.keys = &quot;right&quot;&amp;#10;    &amp;#10;&amp;#10;if (trial_response.keys=='left') :&amp;#10;    myChosen=&quot;left&quot;&amp;#10;    myCircleHoriz = -0.13&amp;#10;else :&amp;#10;    myChosen=&quot;right&quot;&amp;#10;    myCircleHoriz = 0.22&amp;#10;if (trial_response.keys==correctResponse) :&amp;#10;    myTrialCorrect=True&amp;#10;    thisExp.addData('Correct',1)&amp;#10;    myTally = myTally + 1&amp;#10;    myFeedbackImage=&quot;assets/win.png&quot;&amp;#10;    myConsecutiveCorrect = myConsecutiveCorrect+1&amp;#10;    if (myConsecutiveCorrect &gt;= myCriterion) :&amp;#10;        CriterionReached=True&amp;#10;else :&amp;#10;    myTrialCorrect=False&amp;#10;    thisExp.addData('Correct',0)&amp;#10;    myFeedbackImage=&quot;assets/lose.png&quot;&amp;#10;    myConsecutiveCorrect = 0&amp;#10;if (correctResponse==&quot;left&quot;) :&amp;#10;    showLeftFish=myLeftFishFileName&amp;#10;    showRightFish=&quot;assets/blank.png&quot;&amp;#10;else :&amp;#10;    showLeftFish=&quot;assets/blank.png&quot;&amp;#10;    showRightFish=myRightFishFileName&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="log_trial" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;correct = &quot;&quot;;&amp;#10;if ((trial_response.keys === correctResponse)) {&amp;#10;    correct = &quot;1&quot;;&amp;#10;} else {&amp;#10;    correct = &quot;0&quot;;&amp;#10;}&amp;#10;stim_vars = [face, leftFish, rightFish, correctResponse];&amp;#10;stim = &quot;,&quot;.join(stim_vars);&amp;#10;if (_pj.in_es6(stim, crit_pairs_stims)) {&amp;#10;    correct += &quot;*&quot;;&amp;#10;}&amp;#10;if (((current_phase &lt; 3) &amp;&amp; (correct === &quot;1&quot;))) {&amp;#10;    acquisition_score += 1;&amp;#10;} else {&amp;#10;    if ((correct === &quot;1&quot;)) {&amp;#10;        retention_score += 1;&amp;#10;    } else {&amp;#10;        if ((correct === &quot;1*&quot;)) {&amp;#10;            generalization_score += 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((current_phase &lt; 3)) {&amp;#10;    acquisition_trials += 1;&amp;#10;} else {&amp;#10;    if ((! _pj.in_es6(&quot;*&quot;, correct))) {&amp;#10;        retention_trials += 1;&amp;#10;    } else {&amp;#10;        generalization_trials += 1;&amp;#10;    }&amp;#10;}&amp;#10;log_vars = function () {&amp;#10;    var _pj_a = [], _pj_b = [current_trial, face, leftFish, rightFish, correctResponse, trial_response.keys, trial_response.rt, correct];&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var x = _pj_b[_pj_c];&amp;#10;        _pj_a.push(x.toString());&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;log_text = (&quot;,&quot;.join(log_vars) + &quot;\n&quot;);&amp;#10;data_file.write(log_text);&amp;#10;current_trial += 1;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="correct = &quot;&quot;&amp;#10;if(trial_response.keys == correctResponse):&amp;#10;    # We do a string so we can concatenate an asterisk to it for critical pairs&amp;#10;    correct = &quot;1&quot; # 1 if correct, 0 otherwise&amp;#10;else:&amp;#10;    correct = &quot;0&quot;&amp;#10;&amp;#10;# Add a star if this stimulus contains a critical pair&amp;#10;stim_vars = [face, leftFish, rightFish, correctResponse]&amp;#10;stim = &quot;,&quot;.join(stim_vars)&amp;#10;if (stim in crit_pairs_stims):&amp;#10;    correct += &quot;*&quot;&amp;#10;    &amp;#10;# Keeping track of overall scores&amp;#10;# phases &lt; 3 are acquisition, phase 3 is testing retention and generalization&amp;#10;if(current_phase &lt; 3 and correct == &quot;1&quot;): &amp;#10;    acquisition_score += 1&amp;#10;elif(correct == &quot;1&quot;): # We are in phase 3, correct answer, but no critical pair&amp;#10;    retention_score += 1&amp;#10;elif(correct == &quot;1*&quot;): # We are in phase 3, correct answer, but no critical pair&amp;#10;    generalization_score += 1&amp;#10;&amp;#10;# Update the number of trials &amp;#10;# phases &lt; 3 are acquisition, phase 3 is testing retention and generalization&amp;#10;if(current_phase &lt; 3):&amp;#10;    acquisition_trials += 1&amp;#10;# If not a critical pair (no asterisk), it is retention&amp;#10;elif(&quot;*&quot; not in correct):&amp;#10;    retention_trials += 1&amp;#10;# if it is a critical pair then it is generalization&amp;#10;else:&amp;#10;    generalization_trials += 1&amp;#10;    &amp;#10;&amp;#10;# Convert all the variables we want to log into strings and store them in a list&amp;#10;# so we can join them later&amp;#10;log_vars = [ str(x) for x in [current_trial, face, leftFish, rightFish, &amp;#10;            correctResponse, trial_response.keys, trial_response.rt, correct]]&amp;#10;&amp;#10;log_text = &quot;,&quot;.join(log_vars) + &quot;\n&quot;&amp;#10;data_file.write(log_text)&amp;#10;&amp;#10;current_trial += 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="log_trial" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="startup">
      <RoutineSettingsComponent name="startup" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="startup" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="imports" plugin="None">
        <Param val="import random&amp;#10;import csv" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as csv from 'csv';&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="imports" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="face_fish_pairing" plugin="None">
        <Param val="&amp;#10;# File names of faces and fishes without extension&amp;#10;fishes = [&quot;green&quot;, &quot;blue&quot;, &quot;purple&quot;, &quot;red&quot;]&amp;#10;faces = [&quot;boy&quot;, &quot;girl&quot;, &quot;man&quot;, &quot;woman&quot;]&amp;#10;&amp;#10;# Generating the random pairings&amp;#10;# Distinct random numbers in [0, 3]&amp;#10;r1, r2, r3, r4 = random.sample(population=range(4), k=4)&amp;#10;&amp;#10;exp_files_path = os.path.join(os.getcwd(), &quot;experimentFiles&quot;)&amp;#10;pairs_filename = &quot;face_fish_pairings.csv&quot;&amp;#10;pairings_filepath = os.path.join(exp_files_path, pairs_filename)&amp;#10;file = open(pairings_filepath, &quot;w&quot;)&amp;#10;file.write(&quot;face,fish1,fish2\n&quot;)&amp;#10;file.write(f&quot;{faces[r1]},{fishes[r1]},{fishes[r2]}\n&quot;)&amp;#10;file.write(f&quot;{faces[r2]},{fishes[r1]},{fishes[r2]}\n&quot;)&amp;#10;file.write(f&quot;{faces[r3]},{fishes[r3]},{fishes[r4]}\n&quot;)&amp;#10;file.write(f&quot;{faces[r4]},{fishes[r3]},{fishes[r4]}\n&quot;)&amp;#10;file.close()" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as os from 'os';&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;fishes = [&quot;green&quot;, &quot;blue&quot;, &quot;purple&quot;, &quot;red&quot;];&amp;#10;faces = [&quot;boy&quot;, &quot;girl&quot;, &quot;man&quot;, &quot;woman&quot;];&amp;#10;random_numbers = [];&amp;#10;for (var _, _pj_c = 0, _pj_a = util.range(4), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    _ = _pj_a[_pj_c];&amp;#10;    r = Math.random.randint(0, 3);&amp;#10;    while (_pj.in_es6(r, random_numbers)) {&amp;#10;        r = Math.random.randint(0, 3);&amp;#10;    }&amp;#10;    random_numbers.push(r);&amp;#10;}&amp;#10;[r1, r2, r3, r4] = random_numbers;&amp;#10;exp_files_path = os.path.join(os.getcwd(), &quot;experimentFiles&quot;);&amp;#10;pairs_filename = &quot;face_fish_pairings.csv&quot;;&amp;#10;pairings_filepath = os.path.join(exp_files_path, pairs_filename);&amp;#10;file = open(pairings_filepath, &quot;w&quot;);&amp;#10;file.write(&quot;face,fish1,fish2\n&quot;);&amp;#10;file.write(`${faces[r1]},${fishes[r1]},${fishes[r2]}&amp;#10;`);&amp;#10;file.write(`${faces[r2]},${fishes[r1]},${fishes[r2]}&amp;#10;`);&amp;#10;file.write(`${faces[r3]},${fishes[r3]},${fishes[r4]}&amp;#10;`);&amp;#10;file.write(`${faces[r4]},${fishes[r3]},${fishes[r4]}&amp;#10;`);&amp;#10;file.close();&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="face_fish_pairing" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="phase_gen" plugin="None">
        <Param val="&amp;#10;def generate_phase_file(pairings, phase_faces, phase_fishes, filename):&amp;#10;    '''&amp;#10;    Generates a csv file with every valid combination of face &amp;#10;    left_fish and right_fish. &amp;#10;    Args:&amp;#10;        pairings: a dictionary containing all the face-fish pairings in the &amp;#10;                  format pairings[face] = {fish1, fish2}&amp;#10;        phase_faces: a list of strings with the base file name of the faces that &amp;#10;                     correspond to the desired phase&amp;#10;        phase_fishes: a list of strings with the base file name of the fishes &amp;#10;                      that correspond to the desired phase&amp;#10;    Returns:&amp;#10;        None. It instead generates [filename].csv for the that lists the&amp;#10;        stimuli for the desired phase&amp;#10;    '''&amp;#10;    file = open(filename, &quot;w&quot;, newline=&quot;&quot;)&amp;#10;    header = [&quot;face&quot;,&quot;leftFish&quot;,&quot;rightFish&quot;,&quot;correctResponse&quot;]&amp;#10;    writer = csv.writer(file, delimiter=&quot;,&quot;, quotechar=&quot;\&quot;&quot;, &amp;#10;                            quoting=csv.QUOTE_NONNUMERIC)&amp;#10;    writer.writerow(header)&amp;#10;    # filename format should be phaseX.csv where X is the phase number&amp;#10;    # phase_no = filename.split(&quot;.&quot;)[0][-1]&amp;#10;    &amp;#10;    for face in phase_faces:&amp;#10;        # Create a list of the fishes that the face above owns and does not own&amp;#10;        not_owned_fishes = []&amp;#10;        owned_fishes = []&amp;#10;        for fish in phase_fishes:&amp;#10;            if(fish in pairings[face]):&amp;#10;                owned_fishes.append(fish)&amp;#10;            else:&amp;#10;                not_owned_fishes.append(fish)&amp;#10;                &amp;#10;        if(len(owned_fishes) &gt; 1):&amp;#10;            # All the other phases. Do it this way because range would be empty&amp;#10;            # if there's only 1 owned fish&amp;#10;            for i in range(len(owned_fishes)):&amp;#10;                correct = owned_fishes[i]&amp;#10;                incorrect = not_owned_fishes[i]&amp;#10;                row1 = [face, correct, incorrect, &quot;left&quot;]&amp;#10;                row2 = [face, incorrect, correct, &quot;right&quot;]&amp;#10;                writer.writerow(row1)&amp;#10;                writer.writerow(row2)&amp;#10;        else: # Phase 0&amp;#10;            correct = owned_fishes[0]&amp;#10;            incorrect = not_owned_fishes[0]&amp;#10;            row1 = [face, correct, incorrect, &quot;left&quot;]&amp;#10;            row2 = [face, incorrect, correct, &quot;right&quot;]&amp;#10;            writer.writerow(row1)&amp;#10;            writer.writerow(row2)&amp;#10;                &amp;#10;    file.close()&amp;#10;&amp;#10;def remove_crit_pairs(faces, fishes, filename, pairings):&amp;#10;    '''&amp;#10;    Removes and returns the critical pairs from the phase file with &amp;#10;    name `filename`. This should only be used for a phase which is not the test&amp;#10;    phase and was generated with all the faces and fishes, i.e. phase 2.&amp;#10;    Args:&amp;#10;        faces: a list of all the faces&amp;#10;        fishes: a list of all the fishes&amp;#10;        filaneme: the file name of the phase file to modify&amp;#10;        pairings: a dictionary containing all the face-fish pairings in the &amp;#10;                  format pairings[face] = {fish1, fish2}&amp;#10;    Returns:&amp;#10;        a set of all stimuli containing critical pairs &amp;#10;        in comma separated string format&amp;#10;    '''&amp;#10;&amp;#10;    # Phase 3 critical pairs:&amp;#10;    # Face B: Fish a/b, Face D: fish c/d&amp;#10;    do_not_include = {faces[1]: pairings[faces[1]][1], faces[3]: pairings[faces[3]][1]}&amp;#10;    &amp;#10;    file = open(filename, &quot;r&quot;)&amp;#10;    reader = csv.DictReader(file)&amp;#10;    rows = []&amp;#10;    crit_pairs_stims = set()&amp;#10;    for row in reader:&amp;#10;        face = row[&quot;face&quot;]&amp;#10;        fish1 = row[&quot;leftFish&quot;]&amp;#10;        fish2 = row[&quot;rightFish&quot;]&amp;#10;        correct = row[&quot;correctResponse&quot;]&amp;#10;        # If the face is not one of the critical pairs of phase 3 then &amp;#10;        # it should be included in phase 2&amp;#10;        should_include = not ((face in do_not_include) and &amp;#10;            (fish1 == do_not_include[face] or fish2 == do_not_include[face]))&amp;#10;        &amp;#10;        if (should_include): # not a critical pair&amp;#10;            rows.append([face, fish1, fish2, correct])&amp;#10;        else: # critical pair&amp;#10;            stim =  &quot;,&quot;.join([face, fish1, fish2, correct])&amp;#10;            crit_pairs_stims.add(stim)&amp;#10;&amp;#10;    file.close()&amp;#10;    file = open(filename, &quot;w&quot;, newline=&quot;&quot;)&amp;#10;    header = [&quot;face&quot;,&quot;leftFish&quot;,&quot;rightFish&quot;,&quot;correctResponse&quot;]&amp;#10;    writer = csv.writer(file, delimiter=&quot;,&quot;, quotechar=&quot;\&quot;&quot;, &amp;#10;                            quoting=csv.QUOTE_NONNUMERIC)&amp;#10;    writer.writerow(header)&amp;#10;    for row in rows:&amp;#10;        writer.writerow(row)&amp;#10;    file.close()&amp;#10;    &amp;#10;    return crit_pairs_stims&amp;#10;            &amp;#10;# Getting the pairings from previously generated pairings file&amp;#10;exp_files_path = os.path.join(os.getcwd(), &quot;experimentFiles&quot;)&amp;#10;pairings = {}&amp;#10;#pairings_file = open(exp_files_path + &quot;face_fish_pairings.csv&quot;, &quot;r&quot;)&amp;#10;pairings_file = open(pairings_filepath, &quot;r&quot;)&amp;#10;reader = csv.DictReader(pairings_file)&amp;#10;for row in reader:&amp;#10;    pairings[row[&quot;face&quot;]] = [row[&quot;fish1&quot;], row[&quot;fish2&quot;]]&amp;#10;pairings_file.close()&amp;#10;&amp;#10;# All faces&amp;#10;faces = list(pairings)&amp;#10;# All fishes&amp;#10;fishes = []&amp;#10;for face in faces:&amp;#10;    if len(fishes) == 4: #There are only 4 fishes&amp;#10;        break&amp;#10;    for fish in pairings[face]:&amp;#10;        if(fish not in fishes):&amp;#10;            fishes.append(fish)&amp;#10;&amp;#10;&amp;#10;# Face A and Face C&amp;#10;phase0_faces = [faces[0], faces[2]]&amp;#10;phase0_fishes = [pairings[faces[0]][0], pairings[faces[2]][0]]&amp;#10;phase0_file = os.path.join(exp_files_path, &quot;phase0.csv&quot;)&amp;#10;generate_phase_file(pairings, phase0_faces, phase0_fishes, phase0_file)&amp;#10;&amp;#10;phase1_faces = faces&amp;#10;phase1_fishes = phase0_fishes&amp;#10;phase1_file = os.path.join(exp_files_path, &quot;phase1.csv&quot;)&amp;#10;generate_phase_file(pairings, phase1_faces, phase1_fishes, phase1_file)&amp;#10;&amp;#10;phase2_faces = faces&amp;#10;phase2_fishes = fishes&amp;#10;phase2_file = os.path.join(exp_files_path, &quot;phase2.csv&quot;)&amp;#10;generate_phase_file(pairings, phase2_faces, phase2_fishes, phase2_file)&amp;#10;# critical pairs are not supposed to be in phase 2&amp;#10;crit_pairs_stims = remove_crit_pairs(phase2_faces, phase2_fishes, phase2_file, pairings)&amp;#10;&amp;#10;phase3_faces = faces&amp;#10;phase3_fishes = fishes&amp;#10;phase3_file = os.path.join(exp_files_path, &quot;phase3.csv&quot;)&amp;#10;generate_phase_file(pairings, phase3_faces, phase3_fishes, phase3_file)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="&amp;#10;        // add-on: list(s: string): string[]&amp;#10;        function list(s) {&amp;#10;            // if s is a string, we return a list of its characters&amp;#10;            if (typeof s === 'string')&amp;#10;                return s.split('');&amp;#10;            else&amp;#10;                // otherwise we return s:&amp;#10;                return s;&amp;#10;        }&amp;#10;&amp;#10;        import * as csv from 'csv';&amp;#10;import * as os from 'os';&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;function generate_phase_file(pairings, phase_faces, phase_fishes, filename) {&amp;#10;    /*&amp;#10;    Generates a csv file with every valid combination of face&amp;#10;    left_fish and right_fish.&amp;#10;    Args:&amp;#10;    pairings: a dictionary containing all the face-fish pairings in the&amp;#10;    format pairings[face] = {fish1, fish2}&amp;#10;    phase_faces: a list of strings with the base file name of the faces that&amp;#10;    correspond to the desired phase&amp;#10;    phase_fishes: a list of strings with the base file name of the fishes&amp;#10;    that correspond to the desired phase&amp;#10;    Returns:&amp;#10;    None. It instead generates [filename].csv for the that lists the&amp;#10;    stimuli for the desired phase&amp;#10;    */&amp;#10;    var correct, file, incorrect, not_owned_fishes, owned_fishes;&amp;#10;    file = open(filename, &quot;w&quot;);&amp;#10;    file.write(&quot;face,leftFish,rightFish,correctResponse\n&quot;);&amp;#10;    for (var face, _pj_c = 0, _pj_a = phase_faces, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        face = _pj_a[_pj_c];&amp;#10;        not_owned_fishes = [];&amp;#10;        owned_fishes = [];&amp;#10;        for (var fish, _pj_f = 0, _pj_d = phase_fishes, _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;            fish = _pj_d[_pj_f];&amp;#10;            if (_pj.in_es6(fish, pairings[face])) {&amp;#10;                owned_fishes.push(fish);&amp;#10;            } else {&amp;#10;                not_owned_fishes.push(fish);&amp;#10;            }&amp;#10;        }&amp;#10;        if ((owned_fishes.length &gt; 1)) {&amp;#10;            for (var i, _pj_f = 0, _pj_d = util.range(owned_fishes.length), _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;                i = _pj_d[_pj_f];&amp;#10;                correct = owned_fishes[i];&amp;#10;                incorrect = not_owned_fishes[i];&amp;#10;                file.write(`${face},${correct},${incorrect},left&amp;#10;`);&amp;#10;                file.write(`${face},${incorrect},${correct},right&amp;#10;`);&amp;#10;            }&amp;#10;        } else {&amp;#10;            correct = owned_fishes[0];&amp;#10;            incorrect = not_owned_fishes[0];&amp;#10;            file.write(`${face},${correct},${incorrect},left&amp;#10;`);&amp;#10;            file.write(`${face},${incorrect},${correct},right&amp;#10;`);&amp;#10;        }&amp;#10;    }&amp;#10;    file.close();&amp;#10;}&amp;#10;function remove_crit_pairs(faces, fishes, filename, pairings) {&amp;#10;    /*&amp;#10;    Removes and returns the critical pairs from the phase file with&amp;#10;    name `filename`. This should only be used for a phase which is not the test&amp;#10;    phase and was generated with all the faces and fishes, i.e. phase 2.&amp;#10;    Args:&amp;#10;    faces: a list of all the faces&amp;#10;    fishes: a list of all the fishes&amp;#10;    filaneme: the file name of the phase file to modify&amp;#10;    pairings: a dictionary containing all the face-fish pairings in the&amp;#10;    format pairings[face] = {fish1, fish2}&amp;#10;    Returns:&amp;#10;    a set of all stimuli containing critical pairs&amp;#10;    in comma separated string format&amp;#10;    */&amp;#10;    var adjusted_file_text, correct, do_not_include, face, file, fish1, fish2, should_include, stim;&amp;#10;    do_not_include = {[faces[1]]: pairings[faces[1]][1], [faces[3]]: pairings[faces[3]][1]};&amp;#10;    file = open(filename, &quot;r&quot;);&amp;#10;    reader = new csv.DictReader(file);&amp;#10;    adjusted_file_text = &quot;face,leftFish,rightFish,correctResponse\n&quot;;&amp;#10;    crit_pairs_stims = set();&amp;#10;    for (var row, _pj_c = 0, _pj_a = reader, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        row = _pj_a[_pj_c];&amp;#10;        face = row[&quot;face&quot;];&amp;#10;        fish1 = row[&quot;leftFish&quot;];&amp;#10;        fish2 = row[&quot;rightFish&quot;];&amp;#10;        correct = row[&quot;correctResponse&quot;];&amp;#10;        should_include = (! (_pj.in_es6(face, do_not_include) &amp;&amp; ((fish1 === do_not_include[face]) || (fish2 === do_not_include[face]))));&amp;#10;        if (should_include) {&amp;#10;            adjusted_file_text += (&quot;,&quot;.join([face, fish1, fish2, correct]) + &quot;\n&quot;);&amp;#10;        } else {&amp;#10;            stim = &quot;,&quot;.join([face, fish1, fish2, correct]);&amp;#10;            crit_pairs_stims.add(stim);&amp;#10;            continue;&amp;#10;        }&amp;#10;    }&amp;#10;    file.close();&amp;#10;    file = open(filename, &quot;w&quot;);&amp;#10;    file.write(adjusted_file_text);&amp;#10;    file.close();&amp;#10;    return crit_pairs_stims;&amp;#10;}&amp;#10;exp_files_path = os.path.join((os.getcwd() + &quot;experimentFiles&quot;));&amp;#10;pairings = {};&amp;#10;pairings_file = open(pairings_filepath, &quot;r&quot;);&amp;#10;reader = new csv.DictReader(pairings_file);&amp;#10;for (var row, _pj_c = 0, _pj_a = reader, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    row = _pj_a[_pj_c];&amp;#10;    pairings[row[&quot;face&quot;]] = [row[&quot;fish1&quot;], row[&quot;fish2&quot;]];&amp;#10;}&amp;#10;pairings_file.close();&amp;#10;faces = list(pairings);&amp;#10;fishes = [];&amp;#10;for (var face, _pj_c = 0, _pj_a = faces, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    face = _pj_a[_pj_c];&amp;#10;    if ((fishes.length === 4)) {&amp;#10;        break;&amp;#10;    }&amp;#10;    for (var fish, _pj_f = 0, _pj_d = pairings[face], _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;        fish = _pj_d[_pj_f];&amp;#10;        if ((! _pj.in_es6(fish, fishes))) {&amp;#10;            fishes.push(fish);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;phase0_faces = [faces[0], faces[2]];&amp;#10;phase0_fishes = [pairings[faces[0]][0], pairings[faces[2]][0]];&amp;#10;phase0_file = (exp_files_path + &quot;phase0.csv&quot;);&amp;#10;generate_phase_file(pairings, phase0_faces, phase0_fishes, phase0_file);&amp;#10;phase1_faces = faces;&amp;#10;phase1_fishes = phase0_fishes;&amp;#10;phase1_file = (exp_files_path + &quot;phase1.csv&quot;);&amp;#10;generate_phase_file(pairings, phase1_faces, phase1_fishes, phase1_file);&amp;#10;phase2_faces = faces;&amp;#10;phase2_fishes = fishes;&amp;#10;phase2_file = (exp_files_path + &quot;phase2.csv&quot;);&amp;#10;generate_phase_file(pairings, phase2_faces, phase2_fishes, phase2_file);&amp;#10;crit_pairs_stims = remove_crit_pairs(phase2_faces, phase2_fishes, phase2_file, pairings);&amp;#10;phase3_faces = faces;&amp;#10;phase3_fishes = fishes;&amp;#10;phase3_file = (exp_files_path + &quot;phase3.csv&quot;);&amp;#10;generate_phase_file(pairings, phase3_faces, phase3_fishes, phase3_file);&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="phase_gen" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="language" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fb_text = {&amp;#10;    True: {&quot;english&quot;:&quot;Correct!&quot;, &quot;spanish&quot;:&quot;¡Correcto!&quot;},&amp;#10;    False: {&quot;english&quot;:&quot;Incorrect!&quot;, &quot;spanish&quot;:&quot;¡Incorrecto!&quot;},&amp;#10;}&amp;#10;&amp;#10;supported_languages = [&quot;english&quot;, &quot;español&quot;]&amp;#10;&amp;#10;language = expInfo[&quot;language&quot;].lower()&amp;#10;if(language == &quot;spanish&quot; or language == &quot;español&quot;):&amp;#10;    language = &quot;spanish&quot;&amp;#10;elif(language == &quot;english&quot;):&amp;#10;    language = &quot;english&quot;&amp;#10;else:&amp;#10;    print(&quot;Language not supported. The supported languages are:&quot;, file=sys.stderr)&amp;#10;    for lang in supported_languages:&amp;#10;        print(lang, file=sys.stderr)&amp;#10;        &amp;#10;texts = {}&amp;#10;&amp;#10;with open(os.path.join(exp_files_path, &quot;texts.csv&quot;), mode=&quot;r&quot;, newline=&quot;&quot;, encoding=&quot;utf-8&quot;) as csvfile:&amp;#10;    reader = csv.DictReader(csvfile)&amp;#10;    for row in reader:&amp;#10;        texts[row[&quot;text_object&quot;]] = row[language].replace(&quot;\\n&quot;,&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="language" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="license_and_terms" plugin="None">
        <Param val="'''&amp;#10;Fish v. 15 software, running on PsychoPy (v.2023.1.2)&amp;#10;&amp;#10;This software is adapted from software which was written by Catherine E. Myers &amp;#10;under funding from the Department of Veterans Affairs, &amp;#10;Office of Research and Development. &amp;#10;&amp;#10;Design is adapted from the task originally described in &amp;#10;Myers et al. (2003) Journal of Cognitive Neuroscience, 15(2), &amp;#10;185-193.&amp;#10;&amp;#10;Fish v.15 is a neuroscience experiment to asses the generalization performance of individuals&amp;#10;Copyright (C) 2023  Jose Mojica Perez&amp;#10;&amp;#10;This program is free software: you can redistribute it and/or modify&amp;#10;it under the terms of the GNU Affero General Public License as&amp;#10;published by the Free Software Foundation, either version 3 of the&amp;#10;License, or (at your option) any later version.&amp;#10;&amp;#10;This program is distributed in the hope that it will be useful,&amp;#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&amp;#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&amp;#10;GNU Affero General Public License for more details.&amp;#10;&amp;#10;You should have received a copy of the GNU Affero General Public License&amp;#10;along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.&amp;#10;&amp;#10;Author's contact information: &amp;#10;    email: jmojicaperez@acm.org&amp;#10;'''" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/*&amp;#10;Fish v. 15 software, running on PsychoPy (v.2023.1.2)&amp;#10;&amp;#10;This software is adapted from software which was written by Catherine E. Myers&amp;#10;under funding from the Department of Veterans Affairs,&amp;#10;Office of Research and Development.&amp;#10;&amp;#10;Design is adapted from the task originally described in&amp;#10;Myers et al. (2003) Journal of Cognitive Neuroscience, 15(2),&amp;#10;185-193.&amp;#10;&amp;#10;Fish v.15 is a neuroscience experiment to asses the generalization performance of individuals&amp;#10;Copyright (C) 2023  Jose Mojica Perez&amp;#10;&amp;#10;This program is free software: you can redistribute it and/or modify&amp;#10;it under the terms of the GNU Affero General Public License as&amp;#10;published by the Free Software Foundation, either version 3 of the&amp;#10;License, or (at your option) any later version.&amp;#10;&amp;#10;This program is distributed in the hope that it will be useful,&amp;#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&amp;#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&amp;#10;GNU Affero General Public License for more details.&amp;#10;&amp;#10;You should have received a copy of the GNU Affero General Public License&amp;#10;along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.&amp;#10;&amp;#10;Author's contact information:&amp;#10;email: jmojicaperez@acm.org*/&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="license_and_terms" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_data_log" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as datetime from 'datetime';&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;participant = expInfo[&quot;participant&quot;];&amp;#10;experimenter = expInfo[&quot;experimenter&quot;];&amp;#10;data_path = os.path.join(os.getcwd(), &quot;data&quot;);&amp;#10;data_filename = (((expName + &quot;_&quot;) + participant) + &quot;.csv&quot;);&amp;#10;data_file = open(os.path.join(data_path, data_filename), &quot;w&quot;);&amp;#10;expDateTime = datetime.datetime.now();&amp;#10;date = expDateTime.strftime(&quot;%A, %B %d, %Y&quot;);&amp;#10;time = expDateTime.strftime(&quot;%I:%M:%S %p&quot;);&amp;#10;crit_pairs = [];&amp;#10;for (var stim, _pj_c = 0, _pj_a = crit_pairs_stims, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    stim = _pj_a[_pj_c];&amp;#10;    [face, fish1, fish2, correct] = stim.split(&quot;,&quot;);&amp;#10;    pair1 = [face, fish1, fish2];&amp;#10;    pair2 = [face, fish2, fish1];&amp;#10;    if (((! _pj.in_es6(pair1, crit_pairs)) &amp;&amp; (! _pj.in_es6(pair2, crit_pairs)))) {&amp;#10;        crit_pairs.push(pair1);&amp;#10;    }&amp;#10;}&amp;#10;current_phase = 0;&amp;#10;data_file.write(`${expName}&amp;#10;`);&amp;#10;data_file.write(`Subject ID: ${participant}&amp;#10;`);&amp;#10;data_file.write(`Experimenter: ${experimenter}&amp;#10;`);&amp;#10;data_file.write(`&quot;${date}&quot;&amp;#10;`);&amp;#10;data_file.write(`Time: ${time}&amp;#10;`);&amp;#10;data_file.write(`&quot;Note: Critical Pairs = ${crit_pairs}&quot;&amp;#10;`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import datetime&amp;#10;&amp;#10;participant = expInfo[&quot;participant&quot;]&amp;#10;experimenter = expInfo[&quot;experimenter&quot;]&amp;#10;&amp;#10;data_path = os.path.join(os.getcwd(), &quot;data&quot;)&amp;#10;&amp;#10;# Create data directory if it doesn't exist&amp;#10;if(not os.path.exists(data_path)):&amp;#10;    os.mkdir(data_path)&amp;#10;&amp;#10;data_filename = expName + &quot;_&quot; + participant + &quot;.csv&quot;&amp;#10;data_file = open(os.path.join(data_path, data_filename), &quot;w&quot;)&amp;#10;&amp;#10;expDateTime = datetime.datetime.now()&amp;#10;# Weekday(full name), Month(full name) Day(dd), Year(yyyy)&amp;#10;date = expDateTime.strftime(&quot;%A, %B %d, %Y&quot;)&amp;#10;# Hour(00-12):Minute(00-59):Second(00-59) AM/PM&amp;#10;time = expDateTime.strftime(&quot;%I:%M:%S %p&quot;)&amp;#10;&amp;#10;# Getting the critical pairs&amp;#10;crit_pairs = []&amp;#10;for stim in crit_pairs_stims:&amp;#10;    face, fish1, fish2, correct = stim.split(&quot;,&quot;)&amp;#10;    pair1 = (face, fish1, fish2)&amp;#10;    pair2 = (face, fish2, fish1)&amp;#10;    if(pair1 not in crit_pairs and pair2 not in crit_pairs):&amp;#10;        crit_pairs.append(pair1)&amp;#10;        &amp;#10;# Keep track of phase number&amp;#10;current_phase = 0&amp;#10;&amp;#10;data_file.write(f&quot;{expName}\n&quot;)&amp;#10;data_file.write(f&quot;Subject ID: {participant}\n&quot;)&amp;#10;data_file.write(f&quot;Experimenter: {experimenter}\n&quot;)&amp;#10;data_file.write(f&quot;\&quot;{date}\&quot;\n&quot;)&amp;#10;data_file.write(f&quot;Time: {time}\n&quot;)&amp;#10;data_file.write(f&quot;\&quot;Note: Critical Pairs = {crit_pairs}\&quot;\n&quot;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_data_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="License_And_Terms" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="License_And_Terms" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;License_And_Terms&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="conditions_key" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="conditions_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="test_instr">
      <RoutineSettingsComponent name="test_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="test_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="test_text" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="test_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;test_text&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="test_instr_key" plugin="None">
        <Param val="'z','m','left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="test_instr_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="start_phase_log_test" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="current_phase += 1;&amp;#10;current_trial = 1;&amp;#10;data_file.write(`----- PHASE ${current_phase} -----&amp;#10;`);&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;;&amp;#10;data_file.write(header);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Update phase number&amp;#10;current_phase += 1&amp;#10;&amp;#10;# Initialize trials for the curent phase&amp;#10;current_trial = 1&amp;#10;&amp;#10;&amp;#10;data_file.write(f&quot;----- PHASE {current_phase} -----\n&quot;)&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;&amp;#10;data_file.write(header)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_phase_log_test" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="train_instr">
      <RoutineSettingsComponent name="train_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="train_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="train_instructions_text" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="train_instructions_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;train_instructions_text&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="train_instr_key" plugin="None">
        <Param val="'z','m','left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="train_instr_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_train_instr" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="myISIduration=1.0&amp;#10;myTally=0&amp;#10;&amp;#10;CriterionReached=False&amp;#10;myConsecutiveCorrect=0&amp;#10;myCriterion=4&amp;#10;&amp;#10;myCircleHoriz = -0.15&amp;#10;myCircleVert = 0.01&amp;#10;&amp;#10;myTrialCorrect = False&amp;#10;myErr1 = 0&amp;#10;myCrit1 = 0&amp;#10;myErr2 = 0&amp;#10;myCrit2 = 0&amp;#10;myErr3 = 0&amp;#10;myCrit3 = 0&amp;#10;myOldErr = 0&amp;#10;myNewErr = 0&amp;#10;myOldTrials = 0&amp;#10;myNewTrials = 0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="myISIduration = 1.0;&amp;#10;myTally = 0;&amp;#10;CriterionReached = false;&amp;#10;myConsecutiveCorrect = 0;&amp;#10;myCriterion = 4;&amp;#10;myCircleHoriz = (- 0.15);&amp;#10;myCircleVert = 0.01;&amp;#10;myTrialCorrect = false;&amp;#10;myErr1 = 0;&amp;#10;myCrit1 = 0;&amp;#10;myErr2 = 0;&amp;#10;myCrit2 = 0;&amp;#10;myErr3 = 0;&amp;#10;myCrit3 = 0;&amp;#10;myOldErr = 0;&amp;#10;myNewErr = 0;&amp;#10;myOldTrials = 0;&amp;#10;myNewTrials = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_train_instr" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_phase_log_train" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="current_phase = 0;&amp;#10;current_trial = 1;&amp;#10;acquisition_score = 0;&amp;#10;acquisition_trials = 0;&amp;#10;retention_score = 0;&amp;#10;retention_trials = 0;&amp;#10;generalization_score = 0;&amp;#10;generalization_trials = 0;&amp;#10;data_file.write(`----- PHASE ${current_phase} -----&amp;#10;`);&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;;&amp;#10;data_file.write(header);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Initialize phase number&amp;#10;current_phase = 0&amp;#10;&amp;#10;# Initialize trials for the curent phase&amp;#10;current_trial = 1&amp;#10;&amp;#10;# Initialize scores&amp;#10;# Ratio of correct answers/trials for phases 0,1,2&amp;#10;acquisition_score = 0&amp;#10;acquisition_trials = 0&amp;#10;# Ratio of correct answers/trials for non-critical&amp;#10;# pairs in phase 3 (pairs that were shown in previous phases)&amp;#10;retention_score = 0&amp;#10;retention_trials = 0&amp;#10;# Ratio of correct answers/trials for critical&amp;#10;# pairs in phase 3 (pairs that were not shown in previous phases)&amp;#10;generalization_score = 0&amp;#10;generalization_trials = 0&amp;#10;&amp;#10;data_file.write(f&quot;----- PHASE {current_phase} -----\n&quot;)&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;&amp;#10;data_file.write(header)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_phase_log_train" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="goodbye">
      <RoutineSettingsComponent name="goodbye" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="goodbye" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="goodbye_text1" plugin="None">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="goodbye_text1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;goodbye_text1&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="tally" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="tally" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(myTally)" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="goodbye_text2" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="goodbye_text2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts[&quot;goodbye_text2&quot;]" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="goodbye_key" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="goodbye_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="end_data_log" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Close data file&amp;#10;data_file.close()&amp;#10;&amp;#10;# Calculate ratios and convert to string&amp;#10;generalization = generalization_score/generalization_trials&amp;#10;retention = retention_score/retention_trials&amp;#10;acquisition = acquisition_score/acquisition_trials&amp;#10;&amp;#10;# Write summary to file&amp;#10;header = [&quot;subject&quot;,&quot;experiment&quot;,&quot;experimenter&quot;,&amp;#10;        &quot;date&quot;,&quot;time&quot;,&quot;acquisition&quot;,&amp;#10;        &quot;acquisition_trials&quot;,&quot;retention&quot;,&amp;#10;        &quot;retention_trials&quot;,&quot;generalization&quot;,&amp;#10;        &quot;generalization_trials&quot;]&amp;#10;info = [participant, expName, experimenter,&amp;#10;        date, time, acquisition, acquisition_trials,&amp;#10;        retention, retention_trials, generalization,&amp;#10;        generalization_trials]&amp;#10;&amp;#10;summaries_path = os.path.join(data_path, &quot;summaries&quot;)&amp;#10;&amp;#10;# Create summaries dir if it doesn't exist:&amp;#10;if(not os.path.exists(summaries_path)):&amp;#10;    os.mkdir(summaries_path)&amp;#10;    &amp;#10;summary_filename = data_filename.split(&quot;.&quot;)[0] + &quot;_summary.csv&quot;&amp;#10;&amp;#10;with open(os.path.join(summaries_path, summary_filename), &quot;w&quot;, newline=&quot;&quot;) as csvfile:&amp;#10;    writer = csv.writer(csvfile, delimiter=&quot;,&quot;, quotechar=&quot;\&quot;&quot;, quoting=csv.QUOTE_NONNUMERIC)&amp;#10;    writer.writerow(header)&amp;#10;    writer.writerow(info)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_data_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="thisExp.addData('Err1',myErr1)&amp;#10;thisExp.addData('Err2',myErr2)&amp;#10;thisExp.addData('Err3',myErr3)&amp;#10;thisExp.addData('Crit1',myCrit1)&amp;#10;thisExp.addData('Crit2',myCrit2)&amp;#10;thisExp.addData('Crit3',myCrit3)&amp;#10;thisExp.addData('PctErrTestOld',100*myOldErr/myOldTrials)&amp;#10;thisExp.addData('PctErrTestNew',100*myNewErr/myNewTrials)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;Err1&quot;, myErr1);&amp;#10;psychoJS.experiment.addData(&quot;Err2&quot;, myErr2);&amp;#10;psychoJS.experiment.addData(&quot;Err3&quot;, myErr3);&amp;#10;psychoJS.experiment.addData(&quot;Crit1&quot;, myCrit1);&amp;#10;psychoJS.experiment.addData(&quot;Crit2&quot;, myCrit2);&amp;#10;psychoJS.experiment.addData(&quot;Crit3&quot;, myCrit3);&amp;#10;psychoJS.experiment.addData(&quot;PctErrTestOld&quot;, ((100 * myOldErr) / myOldTrials));&amp;#10;psychoJS.experiment.addData(&quot;PctErrTestNew&quot;, ((100 * myNewErr) / myNewTrials));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="doFB1">
      <RoutineSettingsComponent name="doFB1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="doFB1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="FB2_face" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myFaceFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_face" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB2_Circle" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="assets/TheCircle.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_Circle" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[myCircleHoriz, myCircleVert]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB1_leftFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showLeftFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB1_leftFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.15, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB1_rightFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showRightFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB1_rightFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(+0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="FB1_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((myTrialCorrect === false)) {&amp;#10;    myErr1 += 1;&amp;#10;}&amp;#10;if ((CriterionReached === true)) {&amp;#10;    trials1.finished = true;&amp;#10;    myCrit1 = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (myTrialCorrect==False) :&amp;#10;    myErr1 += 1&amp;#10;if (CriterionReached==True) :&amp;#10;    trials1.finished=True&amp;#10;    myCrit1 = 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="FB1_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="FB1_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FB1_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_text[myTrialCorrect][language]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="doFB2">
      <RoutineSettingsComponent name="doFB2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="doFB2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="FB2_face_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myFaceFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_face_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB2_Circle_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="assets/TheCircle.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_Circle_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[myCircleHoriz, myCircleVert]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB2_leftFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showLeftFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_leftFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.15, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB2_rightFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showRightFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB2_rightFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(+0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="FB2_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((myTrialCorrect === false)) {&amp;#10;    myErr2 += 1;&amp;#10;}&amp;#10;if ((CriterionReached === true)) {&amp;#10;    trials2.finished = true;&amp;#10;    myCrit2 = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (myTrialCorrect==False) :&amp;#10;    myErr2 += 1&amp;#10;if (CriterionReached==True) :&amp;#10;    trials2.finished=True&amp;#10;    myCrit2 = 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="FB2_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="FB2_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FB2_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_text[myTrialCorrect][language]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="doFB3">
      <RoutineSettingsComponent name="doFB3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="doFB3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="FB3_face" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myFaceFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB3_face" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB3_Circle" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="assets/TheCircle.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB3_Circle" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[myCircleHoriz, myCircleVert]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB3_leftFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showLeftFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB3_leftFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.15, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="FB3_rightFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$showRightFish" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="FB3_rightFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(+0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="FB3_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((myTrialCorrect === false)) {&amp;#10;    myErr3 += 1;&amp;#10;}&amp;#10;if ((CriterionReached === true)) {&amp;#10;    trials3.finished = true;&amp;#10;    myCrit3 = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (myTrialCorrect==False) :&amp;#10;    myErr3 += 1&amp;#10;if (CriterionReached==True) :&amp;#10;    trials3.finished=True&amp;#10;    myCrit3 = 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="FB3_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="FB3_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FB3_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fb_text[myTrialCorrect][language]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="noFB">
      <RoutineSettingsComponent name="noFB" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="noFB" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="noFB_face" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myFaceFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="noFB_face" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="noFB_Circle" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="assets/TheCircle.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="noFB_Circle" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[myCircleHoriz, myCircleVert]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="noFB_leftFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myLeftFishFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="noFB_leftFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.15, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="noFB_rightFish" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$myRightFishFileName" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="noFB_rightFish" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(+0.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="myISIduration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(&quot;*&quot;, correct)) {&amp;#10;    myNewTrials += 1;&amp;#10;} else {&amp;#10;    myOldTrials += 1;&amp;#10;}&amp;#10;if ((myTrialCorrect === false)) {&amp;#10;    if (_pj.in_es6(&quot;*&quot;, correct)) {&amp;#10;        myNewErr += 1;&amp;#10;    } else {&amp;#10;        myOldErr += 1;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (&quot;*&quot; in correct) :&amp;#10;    myNewTrials+=1&amp;#10;else :&amp;#10;    myOldTrials+=1&amp;#10;if (myTrialCorrect==False) :&amp;#10;    if (&quot;*&quot; in correct) :&amp;#10;        myNewErr+=1&amp;#10;    else :&amp;#10;        myOldErr+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="next_stage">
      <RoutineSettingsComponent name="next_stage" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="next_stage" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="CriterionReached = false;&amp;#10;myConsecutiveCorrect = 0;&amp;#10;myCriterion = (myCriterion + 4);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="CriterionReached=False&amp;#10;myConsecutiveCorrect=0&amp;#10;myCriterion = myCriterion+4&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_phase_log" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="current_phase += 1;&amp;#10;current_trial = 1;&amp;#10;data_file.write(`----- PHASE ${current_phase} -----&amp;#10;`);&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;;&amp;#10;data_file.write(header);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Update phase number&amp;#10;current_phase += 1&amp;#10;&amp;#10;# Initialize trials for the curent phase&amp;#10;current_trial = 1&amp;#10;&amp;#10;data_file.write(f&quot;----- PHASE {current_phase} -----\n&quot;)&amp;#10;header = &quot;Trial,Face,Left Fish,Right Fish,Correct Response,Subject Response,Response Time,Correct/Incorrect\n&quot;&amp;#10;data_file.write(header)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_phase_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="startup"/>
    <Routine name="train_instr"/>
    <LoopInitiator loopType="TrialHandler" name="trials1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('face', 'girl'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="experimentFiles/phase0.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="code"/>
      <Param name="name" updates="None" val="trials1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="runTrial"/>
    <Routine name="doFB1"/>
    <LoopTerminator name="trials1"/>
    <Routine name="next_stage"/>
    <LoopInitiator loopType="TrialHandler" name="trials2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('face', 'girl'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'boy'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'boy'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')]), OrderedDict([('face', 'man'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'man'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="experimentFiles/phase1.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="code"/>
      <Param name="name" updates="None" val="trials2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="runTrial"/>
    <Routine name="doFB2"/>
    <LoopTerminator name="trials2"/>
    <Routine name="next_stage"/>
    <LoopInitiator loopType="TrialHandler" name="trials3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('face', 'girl'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'girl'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'right')]), OrderedDict([('face', 'boy'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'boy'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'right')]), OrderedDict([('face', 'man'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'man'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="experimentFiles/phase2.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="code"/>
      <Param name="name" updates="None" val="trials3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="runTrial"/>
    <Routine name="doFB3"/>
    <LoopTerminator name="trials3"/>
    <Routine name="test_instr"/>
    <LoopInitiator loopType="TrialHandler" name="test_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('face', 'girl'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'girl'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'left')]), OrderedDict([('face', 'girl'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'right')]), OrderedDict([('face', 'boy'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'left')]), OrderedDict([('face', 'boy'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'right')]), OrderedDict([('face', 'boy'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'left')]), OrderedDict([('face', 'boy'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')]), OrderedDict([('face', 'woman'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'left')]), OrderedDict([('face', 'woman'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'right')]), OrderedDict([('face', 'man'), ('leftFish', 'red'), ('rightFish', 'blue'), ('correctResponse', 'left')]), OrderedDict([('face', 'man'), ('leftFish', 'blue'), ('rightFish', 'red'), ('correctResponse', 'right')]), OrderedDict([('face', 'man'), ('leftFish', 'purple'), ('rightFish', 'green'), ('correctResponse', 'left')]), OrderedDict([('face', 'man'), ('leftFish', 'green'), ('rightFish', 'purple'), ('correctResponse', 'right')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="experimentFiles/phase3.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="code"/>
      <Param name="name" updates="None" val="test_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="runTrial"/>
    <Routine name="noFB"/>
    <LoopTerminator name="test_trials"/>
    <Routine name="goodbye"/>
  </Flow>
</PsychoPy2experiment>
